#codes from pythonanywhere

import telebot
import time

bot_token = 'bot_api_token' #your Telegram Bot API Token generated by @BotFather

bot = telebot.TeleBot(token=bot_token)

@bot.message_handler(commands=['start']) #answer if command is start
def send_welcome(message):
    userfirstname = message.chat.first_name

    #error handling
    user_telegram_handle = message.from_user.username #string
    date_message = message.date #class: integer 
    from datetime import datetime, timedelta
    datetime_user = datetime.fromtimestamp(date_message) + timedelta(hours=8) #SG time is 8 hours faster than UTC (telegram time)
    error_date = datetime_user.strftime('%d %b %Y, %H:%M:%S')
    error = 'New user @{} started the bot on {}.'.format(user_telegram_handle, error_date)
    print(error) #end of error handling

    bot.reply_to(message, 'Howdy ' + userfirstname + ' and cheers to an intoxicated world!' + u' \U0001F942 So, what is your poison?') #example: Howdy <Sophia> and cheers to an intoxicated world! (clinking glasses emoji) So, what is your poison?

@bot.message_handler(func=lambda m: True)
def reply_all(message):
    user_input = message.text

    #error handling
    date_message = message.date #class: integer 
    from datetime import datetime, timedelta
    datetime_user = datetime.fromtimestamp(date_message) + timedelta(hours=8) #SG time is 8 hours faster than UTC (telegram time)
    error_date = datetime_user.strftime('%d %b %Y, %H:%M:%S')
    error = 'User @{} gave input "{}" on {}.'.format(message.from_user.username, user_input, error_date)
    print(error) #end of error handling

    if user_input.isdigit() or user_input in "~!@#$%^&*()_-+=[]{}|\/<>,.?:;": #if there is/are number(s) in user's message OR if user's input contains any of the characters specified
        print("ERROR: User @{}'s input is unsuitable.".format(message.from_user.username))

    if " " in user_input:
        print("There is a space detected in user's @{} input.".format(message.from_user.username))
        user_input = user_input.replace(" ", "%20") #change any space (from user's message) to URL's encoding for space

    url = "https://www.thecocktaildb.com/api/json/v1/1/search.php?s=" + user_input

    import urllib, json
    #import urllib.request #python anywhere: ERROR: No module named request
    #response = urllib.request.urlopen(url) #python anywhere (incompatible)
    from urllib2 import urlopen #python anywhere (compatible)
    response = urlopen(url) #python anywhere (compatible)
    data = json.loads(response.read())

    alldrinks_List = data['drinks']

    if alldrinks_List == None: #if there is no known drinks with user's input (empty JSON object)
        bot.reply_to(message, "Grr gimme a suitable drink...!" + u" \U0001F975") #Grr gimme a suitable drink...! (red overheated face emoji)
        print("ERROR: Resulting JSON object is empty, hence an error message is sent to user @{} to provide a suitable drink.".format(message.from_user.username))
    else: #if there is/are known drink(s) with user's input (non-empty JSON object)
        print("Resulting JSON object of list of drinks is non-empty.")
        alldrinks_num = len(alldrinks_List)

        import random
        onedrink_info = alldrinks_List[random.randint(0, alldrinks_num-1)] #pick a specific drink example from list of drinks

        onedrink_name = onedrink_info['strDrink']
        onedrink_glass = onedrink_info['strGlass']
        onedrink_instruct = onedrink_info['strInstructions']
        onedrink_instruct = onedrink_instruct.rstrip() #remove any white spaces at the end of string #example, Blue Hurricane (id: 17268)
        onedrink_how = ''
        for i in range(1,16):
            ingredient = "strIngredient" + str(i)
            ingredient = onedrink_info[ingredient]
            amount = "strMeasure" + str(i)
            amount = onedrink_info[amount]
            if ingredient != None and ingredient != "" and amount != None and amount != "":
                onedrink_how += "- " + amount.rstrip() + ' ' + ingredient + '\n'
            else:
                break
        onedrink_how = onedrink_how.rstrip() #remove the last \n

        result = ('Name: {}\n\nHow to make: {}\n\nGlass used: {}\n\nIngredients:\n{}'.format(onedrink_name, onedrink_instruct, onedrink_glass, onedrink_how))
        print("Drink ({}) chosen for user @{} has id {}.".format(onedrink_name, message.from_user.username,onedrink_info['idDrink'])) #error handling #CHECK if got error: lookup full cocktail details by id >>> https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=11007

        bot.reply_to(message, result)
        full_image_url = onedrink_info['strDrinkThumb']
        bot.send_photo(message.chat.id, full_image_url)

while True:
    try:
        bot.polling()
    except Exception:
        time.sleep(15)